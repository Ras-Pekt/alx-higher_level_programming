matrix_divided module chacks
============================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


int, float and mixed matrix tests
=================================

>>> matrix_divided([[3, 6, 9], [10, 25, 31]], 2)
[[1.5, 3.0, 4.5], [5.0, 12.5, 15.5]]

>>> matrix_divided([[1.5, 2.4, 3.1], [4.3, 5.0, 6.8]], 2)
[[0.75, 1.2, 1.55], [2.15, 2.5, 3.4]]

>>> matrix_divided([[3, 6.4, 9], [10.8, 25, 32.0]], 4)
[[0.75, 1.6, 2.25], [2.7, 6.25, 8.0]]


negative value tests
====================

>>> matrix_divided([[-1, 3.1, 0], [78, -103.7, 54]], 9.2)
[[-0.11, 0.34, 0.0], [8.48, -11.27, 5.87]]

>>> matrix_divided([[-1.298, -2.4, -3.21358], [4.3, -5, -6.86845]], 2)
[[-0.65, -1.2, -1.61], [2.15, -2.5, -3.43]]


division by zero tests
======================

>>> matrix_divided([[-1, -2.4, -3], [4.3, -5, -6.8]], 0)
Traceback (most recent call last):
        ...
ZeroDivisionError: division by zero


division by non int/float tests
======================

>>> matrix_divided([[2, 5], [1, "Robot"]], 4)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[10, 50], [30, 20]], "10")
Traceback (most recent call last):
        ...
TypeError: div must be a number

>>> matrix_divided([[2.1, 5.8], [], [10, -3]], 8)
Traceback (most recent call last):
        ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([(1, 2, 3), (4, 5, 6)], 3)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([{1:"2", 3:"4"}, {4:"5", 6:"7"}], 3)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats



